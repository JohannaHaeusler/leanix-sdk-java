/*
 * LeanIX Pathfinder REST API
 * Core application for storage and analysis of IT landscape data
 *
 * OpenAPI spec version: 0.1.13-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package net.leanix.api;

import net.leanix.api.common.ApiException;
import net.leanix.api.models.QueryListResponse;
import net.leanix.api.models.QueryResponse;
import net.leanix.api.models.SavedQuery;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for QueriesApi
 */
@Ignore
public class QueriesApiTest {

    private final QueriesApi api = new QueriesApi();

    
    /**
     * createQuery
     *
     * Saves a query in the database
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createQueryTest() throws ApiException {
        SavedQuery body = null;
        QueryResponse response = api.createQuery(body);

        // TODO: test validations
    }
    
    /**
     * deleteQuery
     *
     * Deletes a query identified by the given ID
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteQueryTest() throws ApiException {
        UUID id = null;
        QueryResponse response = api.deleteQuery(id);

        // TODO: test validations
    }
    
    /**
     * getQueriesForUser
     *
     * Retrieves all stored queries a user has created.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getQueriesForUserTest() throws ApiException {
        String queryType = null;
        String groupKey = null;
        QueryListResponse response = api.getQueriesForUser(queryType, groupKey);

        // TODO: test validations
    }
    
    /**
     * getQuery
     *
     * Retrieves a query by ID
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getQueryTest() throws ApiException {
        UUID id = null;
        QueryResponse response = api.getQuery(id);

        // TODO: test validations
    }
    
    /**
     * updateQuery
     *
     * Updates a query stored in the database
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateQueryTest() throws ApiException {
        SavedQuery body = null;
        QueryResponse response = api.updateQuery(body);

        // TODO: test validations
    }
    
}
