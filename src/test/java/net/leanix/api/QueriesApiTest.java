/**
 * LeanIX Pathfinder REST API
 * Core application for storage and analysis of IT landscape data
 *
 * OpenAPI spec version: 0.1.8-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package net.leanix.api;

import net.leanix.api.common.ApiException;
import net.leanix.api.models.QueryResponse;
import net.leanix.api.models.SavedQuery;
import net.leanix.api.models.QueryListResponse;
import org.junit.Test;


/**
 * API tests for QueriesApi
 */
public class QueriesApiTest {

    private final QueriesApi api = new QueriesApi();

    
    /**
     * createQuery
     *
     * Saves a query in the database
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createQueryTest() throws ApiException {
        SavedQuery body = null;
        // QueryResponse response = api.createQuery(body);

        // TODO: test validations
    }
    
    /**
     * deleteQuery
     *
     * Deletes a query identified by the given ID
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteQueryTest() throws ApiException {
        String id = null;
        // QueryResponse response = api.deleteQuery(id);

        // TODO: test validations
    }
    
    /**
     * getQueriesForUser
     *
     * Retrieves all stored queries a user has created.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getQueriesForUserTest() throws ApiException {
        String queryType = null;
        String groupKey = null;
        // QueryListResponse response = api.getQueriesForUser(queryType, groupKey);

        // TODO: test validations
    }
    
    /**
     * getQuery
     *
     * Retrieves a query by ID
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getQueryTest() throws ApiException {
        String id = null;
        // QueryResponse response = api.getQuery(id);

        // TODO: test validations
    }
    
    /**
     * updateQuery
     *
     * Updates a query stored in the database
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateQueryTest() throws ApiException {
        SavedQuery body = null;
        // QueryResponse response = api.updateQuery(body);

        // TODO: test validations
    }
    
}
