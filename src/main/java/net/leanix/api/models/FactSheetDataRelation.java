/*
 * LeanIX Pathfinder REST API
 * Core application for storage and analysis of IT landscape data
 *
 * OpenAPI spec version: 3.9.5-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package net.leanix.api.models;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import net.leanix.api.models.FactSheetData;
import net.leanix.api.models.FactSheetDataRelation;
import net.leanix.api.models.FieldnameAndData;
import org.joda.time.LocalDate;

/**
 * FactSheetDataRelation
 */

public class FactSheetDataRelation {
  @JsonProperty("id")
  private UUID id = null;

  @JsonProperty("displayNameToFS")
  private String displayNameToFS = null;

  @JsonProperty("activeFrom")
  private LocalDate activeFrom = null;

  @JsonProperty("activeUntil")
  private LocalDate activeUntil = null;

  @JsonProperty("constrainingRelations")
  private List<FactSheetDataRelation> constrainingRelations = new ArrayList<FactSheetDataRelation>();

  @JsonProperty("fields")
  private List<FieldnameAndData> fields = new ArrayList<FieldnameAndData>();

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    ACTIVE("ACTIVE"),
    
    ARCHIVED("ARCHIVED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("status")
  private StatusEnum status = null;

  @JsonProperty("fromId")
  private UUID fromId = null;

  @JsonProperty("toId")
  private UUID toId = null;

  @JsonProperty("factSheet")
  private FactSheetData factSheet = null;

  @JsonProperty("naFields")
  private List<String> naFields = new ArrayList<String>();

  @JsonProperty("type")
  private String type = null;

  public FactSheetDataRelation id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public FactSheetDataRelation displayNameToFS(String displayNameToFS) {
    this.displayNameToFS = displayNameToFS;
    return this;
  }

   /**
   * Get displayNameToFS
   * @return displayNameToFS
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getDisplayNameToFS() {
    return displayNameToFS;
  }

  public void setDisplayNameToFS(String displayNameToFS) {
    this.displayNameToFS = displayNameToFS;
  }

  public FactSheetDataRelation activeFrom(LocalDate activeFrom) {
    this.activeFrom = activeFrom;
    return this;
  }

   /**
   * Get activeFrom
   * @return activeFrom
  **/
  @ApiModelProperty(example = "null", value = "")
  public LocalDate getActiveFrom() {
    return activeFrom;
  }

  public void setActiveFrom(LocalDate activeFrom) {
    this.activeFrom = activeFrom;
  }

  public FactSheetDataRelation activeUntil(LocalDate activeUntil) {
    this.activeUntil = activeUntil;
    return this;
  }

   /**
   * Get activeUntil
   * @return activeUntil
  **/
  @ApiModelProperty(example = "null", value = "")
  public LocalDate getActiveUntil() {
    return activeUntil;
  }

  public void setActiveUntil(LocalDate activeUntil) {
    this.activeUntil = activeUntil;
  }

  public FactSheetDataRelation constrainingRelations(List<FactSheetDataRelation> constrainingRelations) {
    this.constrainingRelations = constrainingRelations;
    return this;
  }

  public FactSheetDataRelation addConstrainingRelationsItem(FactSheetDataRelation constrainingRelationsItem) {
    this.constrainingRelations.add(constrainingRelationsItem);
    return this;
  }

   /**
   * Get constrainingRelations
   * @return constrainingRelations
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<FactSheetDataRelation> getConstrainingRelations() {
    return constrainingRelations;
  }

  public void setConstrainingRelations(List<FactSheetDataRelation> constrainingRelations) {
    this.constrainingRelations = constrainingRelations;
  }

  public FactSheetDataRelation fields(List<FieldnameAndData> fields) {
    this.fields = fields;
    return this;
  }

  public FactSheetDataRelation addFieldsItem(FieldnameAndData fieldsItem) {
    this.fields.add(fieldsItem);
    return this;
  }

   /**
   * Get fields
   * @return fields
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<FieldnameAndData> getFields() {
    return fields;
  }

  public void setFields(List<FieldnameAndData> fields) {
    this.fields = fields;
  }

  public FactSheetDataRelation status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(example = "null", value = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public FactSheetDataRelation fromId(UUID fromId) {
    this.fromId = fromId;
    return this;
  }

   /**
   * Get fromId
   * @return fromId
  **/
  @ApiModelProperty(example = "null", value = "")
  public UUID getFromId() {
    return fromId;
  }

  public void setFromId(UUID fromId) {
    this.fromId = fromId;
  }

  public FactSheetDataRelation toId(UUID toId) {
    this.toId = toId;
    return this;
  }

   /**
   * Get toId
   * @return toId
  **/
  @ApiModelProperty(example = "null", value = "")
  public UUID getToId() {
    return toId;
  }

  public void setToId(UUID toId) {
    this.toId = toId;
  }

  public FactSheetDataRelation factSheet(FactSheetData factSheet) {
    this.factSheet = factSheet;
    return this;
  }

   /**
   * Get factSheet
   * @return factSheet
  **/
  @ApiModelProperty(example = "null", value = "")
  public FactSheetData getFactSheet() {
    return factSheet;
  }

  public void setFactSheet(FactSheetData factSheet) {
    this.factSheet = factSheet;
  }

  public FactSheetDataRelation naFields(List<String> naFields) {
    this.naFields = naFields;
    return this;
  }

  public FactSheetDataRelation addNaFieldsItem(String naFieldsItem) {
    this.naFields.add(naFieldsItem);
    return this;
  }

   /**
   * Get naFields
   * @return naFields
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<String> getNaFields() {
    return naFields;
  }

  public void setNaFields(List<String> naFields) {
    this.naFields = naFields;
  }

  public FactSheetDataRelation type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FactSheetDataRelation factSheetDataRelation = (FactSheetDataRelation) o;
    return Objects.equals(this.id, factSheetDataRelation.id) &&
        Objects.equals(this.displayNameToFS, factSheetDataRelation.displayNameToFS) &&
        Objects.equals(this.activeFrom, factSheetDataRelation.activeFrom) &&
        Objects.equals(this.activeUntil, factSheetDataRelation.activeUntil) &&
        Objects.equals(this.constrainingRelations, factSheetDataRelation.constrainingRelations) &&
        Objects.equals(this.fields, factSheetDataRelation.fields) &&
        Objects.equals(this.status, factSheetDataRelation.status) &&
        Objects.equals(this.fromId, factSheetDataRelation.fromId) &&
        Objects.equals(this.toId, factSheetDataRelation.toId) &&
        Objects.equals(this.factSheet, factSheetDataRelation.factSheet) &&
        Objects.equals(this.naFields, factSheetDataRelation.naFields) &&
        Objects.equals(this.type, factSheetDataRelation.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, displayNameToFS, activeFrom, activeUntil, constrainingRelations, fields, status, fromId, toId, factSheet, naFields, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FactSheetDataRelation {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    displayNameToFS: ").append(toIndentedString(displayNameToFS)).append("\n");
    sb.append("    activeFrom: ").append(toIndentedString(activeFrom)).append("\n");
    sb.append("    activeUntil: ").append(toIndentedString(activeUntil)).append("\n");
    sb.append("    constrainingRelations: ").append(toIndentedString(constrainingRelations)).append("\n");
    sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    fromId: ").append(toIndentedString(fromId)).append("\n");
    sb.append("    toId: ").append(toIndentedString(toId)).append("\n");
    sb.append("    factSheet: ").append(toIndentedString(factSheet)).append("\n");
    sb.append("    naFields: ").append(toIndentedString(naFields)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

