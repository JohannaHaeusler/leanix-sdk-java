/*
 * LeanIX Pathfinder REST API
 * Core application for storage and analysis of IT landscape data
 *
 * OpenAPI spec version: 0.1.10-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package net.leanix.api.models;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import net.leanix.api.models.DataType;

/**
 * ExternalIdType
 */

public class ExternalIdType extends DataType {
  @JsonProperty("urlTemplate")
  private String urlTemplate = null;

  @JsonProperty("uniqueFactSheet")
  private Boolean uniqueFactSheet = false;

  @JsonProperty("readOnly")
  private Boolean readOnly = false;

  @JsonProperty("validator")
  private String validator = null;

   /**
   * Get urlTemplate
   * @return urlTemplate
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getUrlTemplate() {
    return urlTemplate;
  }

   /**
   * Get uniqueFactSheet
   * @return uniqueFactSheet
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getUniqueFactSheet() {
    return uniqueFactSheet;
  }

   /**
   * Get readOnly
   * @return readOnly
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getReadOnly() {
    return readOnly;
  }

   /**
   * Get validator
   * @return validator
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getValidator() {
    return validator;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExternalIdType externalIdType = (ExternalIdType) o;
    return Objects.equals(this.urlTemplate, externalIdType.urlTemplate) &&
        Objects.equals(this.uniqueFactSheet, externalIdType.uniqueFactSheet) &&
        Objects.equals(this.readOnly, externalIdType.readOnly) &&
        Objects.equals(this.validator, externalIdType.validator) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(urlTemplate, uniqueFactSheet, readOnly, validator, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExternalIdType {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    urlTemplate: ").append(toIndentedString(urlTemplate)).append("\n");
    sb.append("    uniqueFactSheet: ").append(toIndentedString(uniqueFactSheet)).append("\n");
    sb.append("    readOnly: ").append(toIndentedString(readOnly)).append("\n");
    sb.append("    validator: ").append(toIndentedString(validator)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

